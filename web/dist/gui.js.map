{
  "version": 3,
  "sources": ["../src/components/nerd-auth.ts", "../src/components/nerd-gui.ts"],
  "sourcesContent": ["import { imsg } from \"../imsg\"\n\nexport class NerdAuth extends HTMLElement {\n  private mode: \"login\" | \"register\" = \"login\"\n\n  connectedCallback() {\n    this.render()\n    this.attachEventListeners()\n  }\n\n  private render() {\n    const isLogin = this.mode === \"login\"\n    this.innerHTML = `\n\t\t\t<style>\n\t\t\t\t.nerd-auth { padding: 1rem; }\n\t\t\t\t.nerd-auth h2 { margin: 0 0 1rem 0; }\n\t\t\t\t.nerd-auth form { display: flex; flex-direction: column; gap: 0.5rem; }\n\t\t\t\t.nerd-auth .toggle { margin-top: 1rem; }\n\t\t\t\t.nerd-auth .error { color: red; margin-top: 0.5rem; }\n\t\t\t</style>\n\t\t\t<div class=\"nerd-auth\">\n\t\t\t\t<h2>${isLogin ? \"Login\" : \"Create Account\"}</h2>\n\t\t\t\t<form>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\tplaceholder=\"Username\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tautocomplete=\"username\"\n\t\t\t\t\t/>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tautocomplete=\"${isLogin ? \"current-password\" : \"new-password\"}\"\n\t\t\t\t\t/>\n\t\t\t\t\t<button type=\"submit\">${isLogin ? \"Login\" : \"Register\"}</button>\n\t\t\t\t</form>\n\t\t\t\t<button class=\"toggle\">\n\t\t\t\t\t${isLogin ? \"Need an account? Register\" : \"Have an account? Login\"}\n\t\t\t\t</button>\n\t\t\t\t<div class=\"error\"></div>\n\t\t\t</div>\n\t\t`\n  }\n\n  private attachEventListeners() {\n    const form = this.querySelector(\"form\") as HTMLFormElement\n    const toggleBtn = this.querySelector(\".toggle\") as HTMLButtonElement\n\n    form.addEventListener(\"submit\", (e) => this.handleSubmit(e))\n    toggleBtn.addEventListener(\"click\", () => this.toggleMode())\n  }\n\n  private toggleMode() {\n    this.mode = this.mode === \"login\" ? \"register\" : \"login\"\n    this.render()\n    this.attachEventListeners()\n  }\n\n  private async handleSubmit(e: Event) {\n    e.preventDefault()\n    const form = e.target as HTMLFormElement\n    const formData = new FormData(form)\n    const username = formData.get(\"username\") as string\n    const password = formData.get(\"password\") as string\n\n    const msgType =\n      this.mode === \"login\" ? imsg.AuthenticateUser : imsg.CreateUser\n\n    try {\n      const response = await fetch(\"/auth\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          type: msgType,\n          payload: { username, password },\n        }),\n      })\n\n      if (!response.ok) {\n        const errorText = await response.text()\n        this.showError(errorText || \"Authentication failed\")\n        return\n      }\n\n      // Success - JWT cookie is set, reload to update userid\n      window.location.reload()\n    } catch (err) {\n      this.showError(\"Network error. Please try again.\")\n    }\n  }\n\n  private showError(message: string) {\n    const errorEl = this.querySelector(\".error\") as HTMLElement\n    if (!errorEl) return\n    errorEl.textContent = message\n  }\n}\n\ncustomElements.define(\"nerd-auth\", NerdAuth)\n", "// Root GUI Component - Top-level container for the entire Nerd interface\n\nimport \"./nerd-auth\"\n\nclass NerdGui extends HTMLElement {\n  private userId: number = 0\n\n  connectedCallback() {\n    // Read userid from attribute\n    const userIdAttr = this.getAttribute(\"userid\")\n    this.userId = userIdAttr ? parseInt(userIdAttr, 10) : 0\n\n    this.render()\n  }\n\n  private render() {\n    const needsAuth = this.userId === 0\n\n    this.innerHTML = `\n            <style>\n                :host {\n                    display: block;\n                    width: 100%;\n                    height: 100vh;\n                    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n                    background: #fafafa;\n                }\n\n                .container {\n                    display: flex;\n                    flex-direction: column;\n                    height: 100%;\n                }\n\n                .header {\n                    background: #2c3e50;\n                    color: white;\n                    padding: 1rem;\n                    font-size: 1.2rem;\n                    font-weight: bold;\n                }\n\n                .content {\n                    flex: 1;\n                    padding: 1rem;\n                    overflow: auto;\n                }\n            </style>\n\n            <div class=\"container\">\n                <div class=\"header\">\n                    Nerd - Personal Software Agent\n                </div>\n                <div class=\"content\">\n                    ${\n                      needsAuth\n                        ? \"<nerd-auth></nerd-auth>\"\n                        : `<p>Welcome, User ${this.userId}!</p><p>Main UI coming soon...</p>`\n                    }\n                </div>\n            </div>\n        `\n  }\n}\n\n// Register the custom element\ncustomElements.define(\"nerd-gui\", NerdGui)\n"],
  "mappings": "AAEO,IAAMA,EAAN,cAAuB,WAAY,CAChC,KAA6B,QAErC,mBAAoB,CAClB,KAAK,OAAO,EACZ,KAAK,qBAAqB,CAC5B,CAEQ,QAAS,CACf,IAAMC,EAAU,KAAK,OAAS,QAC9B,KAAK,UAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UASXA,EAAU,QAAU,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAcxBA,EAAU,mBAAqB,cAAc;AAAA;AAAA,6BAEtCA,EAAU,QAAU,UAAU;AAAA;AAAA;AAAA,OAGpDA,EAAU,4BAA8B,wBAAwB;AAAA;AAAA;AAAA;AAAA,GAKrE,CAEQ,sBAAuB,CAC7B,IAAMC,EAAO,KAAK,cAAc,MAAM,EAChCC,EAAY,KAAK,cAAc,SAAS,EAE9CD,EAAK,iBAAiB,SAAWE,GAAM,KAAK,aAAaA,CAAC,CAAC,EAC3DD,EAAU,iBAAiB,QAAS,IAAM,KAAK,WAAW,CAAC,CAC7D,CAEQ,YAAa,CACnB,KAAK,KAAO,KAAK,OAAS,QAAU,WAAa,QACjD,KAAK,OAAO,EACZ,KAAK,qBAAqB,CAC5B,CAEA,MAAc,aAAa,EAAU,CACnC,EAAE,eAAe,EACjB,IAAMD,EAAO,EAAE,OACTG,EAAW,IAAI,SAASH,CAAI,EAC5BI,EAAWD,EAAS,IAAI,UAAU,EAClCE,EAAWF,EAAS,IAAI,UAAU,EAElCG,EACJ,KAAK,OAAS,YAEhB,GAAI,CACF,IAAMC,EAAW,MAAM,MAAM,QAAS,CACpC,OAAQ,OACR,QAAS,CAAE,eAAgB,kBAAmB,EAC9C,KAAM,KAAK,UAAU,CACnB,KAAMD,EACN,QAAS,CAAE,SAAAF,EAAU,SAAAC,CAAS,CAChC,CAAC,CACH,CAAC,EAED,GAAI,CAACE,EAAS,GAAI,CAChB,IAAMC,EAAY,MAAMD,EAAS,KAAK,EACtC,KAAK,UAAUC,GAAa,uBAAuB,EACnD,MACF,CAGA,OAAO,SAAS,OAAO,CACzB,MAAc,CACZ,KAAK,UAAU,kCAAkC,CACnD,CACF,CAEQ,UAAUC,EAAiB,CACjC,IAAMC,EAAU,KAAK,cAAc,QAAQ,EACtCA,IACLA,EAAQ,YAAcD,EACxB,CACF,EAEA,eAAe,OAAO,YAAaX,CAAQ,ECjG3C,IAAMa,EAAN,cAAsB,WAAY,CACxB,OAAiB,EAEzB,mBAAoB,CAElB,IAAMC,EAAa,KAAK,aAAa,QAAQ,EAC7C,KAAK,OAASA,EAAa,SAASA,EAAY,EAAE,EAAI,EAEtD,KAAK,OAAO,CACd,CAEQ,QAAS,CACf,IAAMC,EAAY,KAAK,SAAW,EAElC,KAAK,UAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAqCCA,EACI,0BACA,oBAAoB,KAAK,MAAM,oCACrC;AAAA;AAAA;AAAA,SAIlB,CACF,EAGA,eAAe,OAAO,WAAYF,CAAO",
  "names": ["NerdAuth", "isLogin", "form", "toggleBtn", "e", "formData", "username", "password", "msgType", "response", "errorText", "message", "errorEl", "NerdGui", "userIdAttr", "needsAuth"]
}
