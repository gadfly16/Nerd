{
  "version": 3,
  "sources": ["../src/imsg.ts", "../src/system.ts", "../src/components/nerd-action.ts", "../src/components/nerd-auth.ts", "../src/components/nerd-header.ts", "../src/components/nerd-footer.ts", "../src/components/nerd-workbench.ts", "../src/components/nerd-gui.ts"],
  "sourcesContent": ["// Interface Message Types - Must match internal/imsg/imsg.go\nexport enum imsg {\n  GetTree = 0,\n  CreateChild,\n  RenameChild,\n  Shutdown,\n  AuthenticateUser,\n  CreateUser,\n}\n\nexport async function ask(type: imsg, pl: any): Promise<any> {\n  const response = await fetch(\"/auth\", {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ type, payload: pl }),\n  })\n\n  if (!response.ok) {\n    throw new Error((await response.text()) || \"Request failed\")\n  }\n\n  return await response.json()\n}\n", "// Global system state\n\nimport type { NerdGui } from \"./components/nerd-gui\"\n\nexport const system = {\n  gui: undefined as unknown as NerdGui,\n}\n", "const style = `\n\tnerd-action {\n\t\tdisplay: inline;\n\t\tbackground: none;\n\t\tborder: none;\n\t\tcolor: #0066cc;\n\t\ttext-decoration: underline;\n\t\tcursor: pointer;\n\t\tpadding: 0;\n\t\tfont: inherit;\n\t}\n\n\tnerd-action:hover {\n\t\tcolor: #0052a3;\n\t}\n`\n\nexport class NerdAction extends HTMLElement {}\n\n// Register component and append style\nconst styleElement = document.createElement(\"style\")\nstyleElement.textContent = style\ndocument.head.appendChild(styleElement)\ncustomElements.define(\"nerd-action\", NerdAction)\n", "import { imsg, ask } from \"../imsg\"\nimport { system } from \"../system\"\nimport \"./nerd-action\"\n\nconst style = `\n\tnerd-auth {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\twidth: 100vw;\n\t\theight: 100vh;\n\t}\n\n\tnerd-auth .auth-box {\n\t\twidth: 20em;\n\t\tpadding: 1.5em;\n\t\tborder: 1px solid #ddd;\n\t\tborder-radius: 0.5em;\n\t\tbackground: white;\n\t}\n\n\tnerd-auth form {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tgap: 0.666em;\n\t}\n\n`\n\nconst html = `\n\t<div class=\"auth-box\">\n\t\t<form class=\"login\">\n\t\t\t<h2>Login</h2>\n\t\t\t<input type=\"text\" name=\"username\" placeholder=\"Username\" required />\n\t\t\t<input type=\"password\" name=\"password\" placeholder=\"Password\" required />\n\t\t\t<button type=\"submit\">Login</button>\n\t\t\t<nerd-action class=\"toggle\">Need an account? Register</nerd-action>\n\t\t</form>\n\t\t<form class=\"register hidden\">\n\t\t\t<h2>Create Account</h2>\n\t\t\t<input type=\"text\" name=\"username\" placeholder=\"Username\" required />\n\t\t\t<input type=\"password\" name=\"password\" placeholder=\"Password\" required />\n\t\t\t<button type=\"submit\">Register</button>\n\t\t\t<nerd-action class=\"toggle\">Have an account? Login</nerd-action>\n\t\t</form>\n\t\t<div class=\"error\"></div>\n\t</div>\n`\n\nexport class NerdAuth extends HTMLElement {\n  private regmode = false\n  private login = undefined as unknown as HTMLFormElement\n  private register = undefined as unknown as HTMLFormElement\n  private error = undefined as unknown as HTMLDivElement\n\n  connectedCallback() {\n    this.innerHTML = html\n    this.login = this.querySelector(\".login\")!\n    this.register = this.querySelector(\".register\")!\n    this.error = this.querySelector(\".error\")!\n    this.attachEventListeners()\n  }\n\n  private attachEventListeners() {\n    this.login.addEventListener(\"submit\", (e) => this.handleSubmit(e, false))\n    this.register.addEventListener(\"submit\", (e) => this.handleSubmit(e, true))\n    this.login\n      .querySelector(\".toggle\")!\n      .addEventListener(\"click\", () => this.toggleMode())\n    this.register\n      .querySelector(\".toggle\")!\n      .addEventListener(\"click\", () => this.toggleMode())\n  }\n\n  private toggleMode() {\n    this.regmode = !this.regmode\n    this.login.classList.toggle(\"hidden\")\n    this.register.classList.toggle(\"hidden\")\n  }\n\n  private async handleSubmit(e: Event, regmode: boolean) {\n    e.preventDefault()\n    const formData = new FormData(e.target as HTMLFormElement)\n    const pl = Object.fromEntries(formData)\n\n    try {\n      const a = await ask(regmode ? imsg.CreateUser : imsg.AuthenticateUser, pl)\n      system.gui.userId = a.userid\n      system.gui.updateAuthState()\n    } catch (err) {\n      this.showError(\n        err instanceof Error ? err.message : \"Network error. Please try again.\",\n      )\n    }\n  }\n\n  private showError(error: string) {\n    this.error.textContent = error\n  }\n}\n\n// Register component and append style\nconst styleElement = document.createElement(\"style\")\nstyleElement.textContent = style\ndocument.head.appendChild(styleElement)\ncustomElements.define(\"nerd-auth\", NerdAuth)\n", "export class NerdHeader extends HTMLElement {\n  connectedCallback() {\n    this.render()\n  }\n\n  private render() {\n    this.innerHTML = `\n\t\t\t<style>\n\t\t\t\tnerd-header {\n\t\t\t\t\tdisplay: block;\n\t\t\t\t\tbackground: #2c3e50;\n\t\t\t\t\tcolor: white;\n\t\t\t\t\tpadding: 1rem;\n\t\t\t\t\tfont-size: 1.2rem;\n\t\t\t\t\tfont-weight: bold;\n\t\t\t\t}\n\t\t\t</style>\n\n\t\t\tNerd - Personal Software Agent Framework\n\t\t`\n  }\n}\n\ncustomElements.define(\"nerd-header\", NerdHeader)\n", "export class NerdFooter extends HTMLElement {\n\tconnectedCallback() {\n\t\tthis.render()\n\t}\n\n\tprivate render() {\n\t\tthis.innerHTML = `\n\t\t\t<style>\n\t\t\t\tnerd-footer {\n\t\t\t\t\tdisplay: block;\n\t\t\t\t\tbackground: #2c3e50;\n\t\t\t\t\tcolor: white;\n\t\t\t\t\tpadding: 1rem;\n\t\t\t\t\ttext-align: center;\n\t\t\t\t}\n\t\t\t</style>\n\n\t\t\tFooter\n\t\t`\n\t}\n}\n\ncustomElements.define(\"nerd-footer\", NerdFooter)\n", "import \"./nerd-header\"\nimport \"./nerd-footer\"\n\nexport class NerdWorkbench extends HTMLElement {\n  connectedCallback() {\n    this.render()\n  }\n\n  private render() {\n    this.innerHTML = `\n      <style>\n        nerd-workbench {\n          display: grid;\n          grid-template-columns: 1fr 1fr;\n          grid-template-rows: auto 1fr auto;\n          grid-template-areas:\n            \"header header\"\n            \"left right\"\n            \"footer footer\";\n          width: 100%;\n          height: 100%;\n        }\n\n        nerd-workbench nerd-header {\n          grid-area: header;\n        }\n\n        nerd-workbench .board.left {\n          grid-area: left;\n          border: 1px solid #ddd;\n        }\n\n        nerd-workbench .board.right {\n          grid-area: right;\n          border: 1px solid #ddd;\n        }\n\n        nerd-workbench nerd-footer {\n          grid-area: footer;\n        }\n      </style>\n\n      <nerd-header></nerd-header>\n      <div class=\"board left\"></div>\n      <div class=\"board right\"></div>\n      <nerd-footer></nerd-footer>\n    `\n  }\n}\n\ncustomElements.define(\"nerd-workbench\", NerdWorkbench)\n", "// Root GUI Component - Top-level container for the entire Nerd interface\n\nimport \"./nerd-auth\"\nimport \"./nerd-workbench\"\nimport { system } from \"../system\"\n\nexport class NerdGui extends HTMLElement {\n  userId: number = 0\n  private auth = document.createElement(\"nerd-auth\")\n\n  connectedCallback() {\n    this.userId = parseInt(this.getAttribute(\"userid\")!, 10)\n    system.gui = this\n    this.render()\n    this.updateAuthState()\n  }\n\n  private render() {\n    this.innerHTML = `\n\t\t\t<style>\n\t\t\t\t@font-face {\n\t\t\t\t\tfont-family: 'Inter';\n\t\t\t\t\tsrc: url('/fonts/InterVariable.woff2');\n\t\t\t\t\tfont-weight: 100 900;\n\t\t\t\t\tfont-display: block;\n\t\t\t\t}\n\n\t\t\t\tbody {\n\t\t\t\t\tmargin: 0;\n\t\t\t\t\tpadding: 0;\n\t\t\t\t}\n\n\t\t\t\th2 {\n\t\t\t\t\tmargin: 0 0 0.25em 0;\n\t\t\t\t\tfont-size: 1.5em;\n\t\t\t\t}\n\n\t\t\t\t.error {\n\t\t\t\t\tcolor: red;\n\t\t\t\t}\n\n\t\t\t\tnerd-gui {\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tflex-direction: column;\n\t\t\t\t\twidth: 100vw;\n\t\t\t\t\theight: 100vh;\n\t\t\t\t\tfont-family: 'Inter';\n\t\t\t\t\tbackground: #fafafa;\n\t\t\t\t}\n\n\t\t\t\t.hidden {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t</style>\n\n\t\t\t<nerd-workbench></nerd-workbench>\n\t\t`\n  }\n\n  updateAuthState() {\n    const workbench = this.querySelector(\"nerd-workbench\")!\n\n    if (this.userId === 0) {\n      // Hide workbench, insert nerd-auth\n      workbench.classList.add(\"hidden\")\n      this.appendChild(this.auth)\n    } else {\n      // Show workbench, remove nerd-auth\n      workbench.classList.remove(\"hidden\")\n      this.auth.remove()\n    }\n  }\n}\n\n// Register the custom element\ncustomElements.define(\"nerd-gui\", NerdGui)\n"],
  "mappings": "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",
  "names": ["ask", "type", "pl", "response", "system", "style", "NerdAction", "styleElement", "style", "html", "NerdAuth", "regmode", "formData", "pl", "a", "ask", "system", "err", "error", "styleElement", "NerdHeader", "NerdFooter", "NerdWorkbench", "NerdGui", "system", "workbench"]
}
